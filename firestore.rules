rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles - users can read/write only their own data
    match /users/{userId} {
      // Allow read if the user is authenticated and the document ID matches their UID
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow write if the user is authenticated and the document ID matches their UID
      // This ensures users can only modify their own documents
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Conversation history - users can only access their own conversations
    match /conversations/{conversationId} {
      // Allow read if the user is authenticated and owns the conversation
      allow read: if request.auth != null && 
                 (resource.data.userId == request.auth.uid || 
                  resource == null); // Handle the case when document doesn't exist yet
      
      // Allow creation of new conversations
      allow create: if request.auth != null && 
                   request.resource.data.userId == request.auth.uid;
      
      // Allow updates/deletes only to the owner
      allow update, delete: if request.auth != null && 
                           resource.data.userId == request.auth.uid;
    }
    
    // Shared content accessible to all authenticated users
    match /content/{contentId} {
      allow read: if request.auth != null;
      allow write: if false;  // Only allow writes through admin functions
    }
      // System collection for connection testing - publicly accessible
    match /system/connection-test {
      allow read: if true; // Allow public access for connection testing
    }
  }
}
